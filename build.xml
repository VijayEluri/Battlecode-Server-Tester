<project xmlns:ivy="antlib:org.apache.ivy.ant" name="BSTester" default="dist" basedir=".">
    <description>
        Builds the distribution for the BSTester
    </description>
    <property name="build" location="build/"/>
    <property name="dist" location="bs-tester/"/>
    <property name="src" location="src/"/>
    <property name="lib" location="lib/"/>
    <property name="jarfile" location="bs-tester.jar"/>
    <path id="lib">
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <target name="resolve-source" description="retrieve dependencies with source and javadocs using ivy">
        <ivy:retrieve file="ivy-source.xml"/>
    </target>

    <target name="resolve" depends="init" description="retrieve dependencies using ivy">
        <ivy:retrieve />
    </target>

    <target name="compile" depends="resolve"
        description="compile the source " >
        <javac srcdir="${src}" destdir="${build}" debug="true">
            <classpath>
                <path refid="lib"/>
            </classpath>
        </javac>
    </target>

    <target name="build" depends="compile" description="generate the executable jar" >
        <path id="lib.classpath">
            <fileset dir="lib">
                <include name="*.*" />
            </fileset>
        </path>
        <pathconvert property="string.classpath" pathsep=" ">
            <path refid="lib.classpath" />
            <map from="${build}/" to="./" />
        </pathconvert>
        <jar jarfile="${jarfile}" basedir="${build}">
            <manifest>
                <attribute name="Main-Class" value="main.Main" />
                <attribute name="Class-Path" value="${string.classpath} teams/"/>
            </manifest>
        </jar>
    </target>

    <target name="dist" depends="build" description="generate the distribution" >
        <mkdir dir="${dist}"/>
        <move todir="${dist}" file="${jarfile}"/>
        <copy todir="${dist}">
            <fileset dir=".">
                <include name="README"/>
                <include name="COPYING"/>
                <include name="run.sh"/>
                <include name="lib/"/>
                <include name="static/"/>
            </fileset>
        </copy>

        <!-- While we need battlecode-server.jar to compile, we don't need to distribute it -->
        <delete file="${dist}/lib/battlecode-server.jar"/>

        <tar destfile="bs-tester.tar.gz" compression="gzip">
            <tarfileset dir=".">
                <include name="bs-tester/"/>
            </tarfileset>
        </tar>
    </target>

    <target name="clean" description="clean up" >
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete file="bs-tester.tar.gz"/>
        <delete file="bs-tester.jar"/>
    </target>

    <target name="purge" depends="clean" description="clean up and remove downloaded dependencies">
        <delete>
            <fileset dir="lib">
                <exclude name="battlecode-server.jar"/>
                <exclude name="tools.jar"/>
            </fileset>
        </delete>
    </target>
</project>
